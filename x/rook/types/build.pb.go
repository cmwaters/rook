// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rook/v1beta/build.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgBuild struct {
	Id         string                                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Creator    github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,opt,name=creator,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"creator,omitempty"`
	Settlement string                                        `protobuf:"bytes,3,opt,name=settlement,proto3" json:"settlement,omitempty"`
	Position   string                                        `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
}

func (m *MsgBuild) Reset()         { *m = MsgBuild{} }
func (m *MsgBuild) String() string { return proto.CompactTextString(m) }
func (*MsgBuild) ProtoMessage()    {}
func (*MsgBuild) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbdead89d8dc7795, []int{0}
}
func (m *MsgBuild) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuild) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuild.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuild) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuild.Merge(m, src)
}
func (m *MsgBuild) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuild) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuild.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuild proto.InternalMessageInfo

func (m *MsgBuild) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgBuild) GetCreator() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *MsgBuild) GetSettlement() string {
	if m != nil {
		return m.Settlement
	}
	return ""
}

func (m *MsgBuild) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgBuild)(nil), "rook.rook.v1beta1.MsgBuild")
}

func init() { proto.RegisterFile("rook/v1beta/build.proto", fileDescriptor_fbdead89d8dc7795) }

var fileDescriptor_fbdead89d8dc7795 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0xca, 0xcf, 0xcf,
	0xd6, 0x2f, 0x33, 0x4c, 0x4a, 0x2d, 0x49, 0xd4, 0x4f, 0x2a, 0xcd, 0xcc, 0x49, 0xd1, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x12, 0x04, 0x49, 0xe8, 0x81, 0x09, 0x88, 0xac, 0xa1, 0x94, 0x48, 0x7a,
	0x7e, 0x7a, 0x3e, 0x58, 0x56, 0x1f, 0xc4, 0x82, 0x28, 0x54, 0x5a, 0xcc, 0xc8, 0xc5, 0xe1, 0x5b,
	0x9c, 0xee, 0x04, 0xd2, 0x2b, 0xc4, 0xc7, 0xc5, 0x94, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1,
	0x19, 0xc4, 0x94, 0x99, 0x22, 0xe4, 0xcd, 0xc5, 0x9e, 0x5c, 0x94, 0x9a, 0x58, 0x92, 0x5f, 0x24,
	0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0xe3, 0x64, 0xf8, 0xeb, 0x9e, 0xbc, 0x6e, 0x7a, 0x66, 0x49, 0x46,
	0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x72, 0x7e, 0x71, 0x6e, 0x7e, 0x31, 0x94, 0xd2, 0x2d,
	0x4e, 0xc9, 0xd6, 0x2f, 0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x73, 0x4c, 0x4e, 0x76, 0x4c, 0x49, 0x29,
	0x4a, 0x2d, 0x2e, 0x0e, 0x82, 0x99, 0x20, 0x24, 0xc7, 0xc5, 0x55, 0x9c, 0x5a, 0x52, 0x92, 0x93,
	0x9a, 0x9b, 0x9a, 0x57, 0x22, 0xc1, 0x0c, 0xb6, 0x04, 0x49, 0x44, 0x48, 0x8a, 0x8b, 0xa3, 0x20,
	0xbf, 0x38, 0xb3, 0x24, 0x33, 0x3f, 0x4f, 0x82, 0x05, 0x2c, 0x0b, 0xe7, 0x3b, 0xd9, 0x9f, 0x78,
	0x24, 0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x5c,
	0x78, 0x2c, 0xc7, 0x70, 0xe3, 0xb1, 0x1c, 0x43, 0x94, 0x2a, 0xb2, 0x6b, 0x72, 0xcb, 0x13, 0x4b,
	0x52, 0x8b, 0x8a, 0xf5, 0xc1, 0xa1, 0x52, 0x01, 0xa1, 0xc0, 0x0e, 0x4a, 0x62, 0x03, 0xfb, 0xd6,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xaf, 0x66, 0x96, 0xef, 0x31, 0x01, 0x00, 0x00,
}

func (m *MsgBuild) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuild) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuild) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Position) > 0 {
		i -= len(m.Position)
		copy(dAtA[i:], m.Position)
		i = encodeVarintBuild(dAtA, i, uint64(len(m.Position)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Settlement) > 0 {
		i -= len(m.Settlement)
		copy(dAtA[i:], m.Settlement)
		i = encodeVarintBuild(dAtA, i, uint64(len(m.Settlement)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintBuild(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintBuild(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintBuild(dAtA []byte, offset int, v uint64) int {
	offset -= sovBuild(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgBuild) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovBuild(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovBuild(uint64(l))
	}
	l = len(m.Settlement)
	if l > 0 {
		n += 1 + l + sovBuild(uint64(l))
	}
	l = len(m.Position)
	if l > 0 {
		n += 1 + l + sovBuild(uint64(l))
	}
	return n
}

func sovBuild(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBuild(x uint64) (n int) {
	return sovBuild(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgBuild) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBuild
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuild: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuild: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthBuild
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthBuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = append(m.Creator[:0], dAtA[iNdEx:postIndex]...)
			if m.Creator == nil {
				m.Creator = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settlement", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Settlement = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuild
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBuild
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBuild
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBuild(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBuild
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBuild
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBuild(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBuild
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBuild
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBuild
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBuild
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBuild
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBuild
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBuild        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBuild          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBuild = fmt.Errorf("proto: unexpected end of group")
)
